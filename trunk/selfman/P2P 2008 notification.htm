<html><head>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Gmail - P2P 2008 notification</title>

<style type="text/css">
body, td{font-family:arial,sans-serif;font-size:80%} a:link, a:active, a:visited{color:#0000CC} img{border:0}
</style>
<script>
function Print(){document.body.offsetHeight;window.print()}
</script></head><body onload="Print()">
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody><tr>
<td width="143">
<img src="P2P%202008%20notification_files/logo1.gif" alt="Gmail" height="59" width="143">
</td>
<td align="right">
<font size="-1"><b>
Chongnan Gao
&lt;gaochongnan@gmail.com&gt;
</b></font></td>
</tr>
</tbody></table>
<hr>
<font size="+2">
<b>P2P 2008 notification</b></font><br>
<hr>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody><tr>
<td>
<font size="-1"><b>
p2p2008@easychair.org
&lt;p2p2008@easychair.org&gt;
</b></font>
</td>
<td align="right">
<font size="-1"><b>
Tue, Jun 10, 2008 at 10:47 AM
</b></font>
</td></tr><tr>
<td colspan="2">
<font size="-1">
<div>
To:
gaochongnan@gmail.com
</div>
</font>
</td></tr><tr>
<td colspan="2">
<table border="0" cellpadding="12" cellspacing="0" width="100%">
<tbody><tr>
<td>
<font size="-1">Dear Author,<br>
<br>
Thank you for submitting your paper to the Eighth International Conference on Peer-to-Peer Computing.<br>
<br>
I am sorry to inform you that your paper has not been accepted. We
received a record number of papers this year: 139 regular papers and 22
short papers. Many excellent contributions were present. In the end, we
accepted only 29 regular papers and 4 short/poster papers, as we are
limited in the number we could accept.<br>
<br>
So, it is possible that your paper has been rejected even with no
reviewer suggesting a rejection! If this is the case, we are sure you
will not have any problem in having your paper published in another
important conference.<br>
<br>
Given the quality of this year's program, we kindly suggest you to
consider attending and participating in the conference anyway - we are
sure you will not be disappointed.<br>
<br>
At the end of this email you will find a set of comments from the
anonymous paper reviewers. &nbsp;If you have questions about the
comments, please reply to this mail.<br>
<br>
Sincerely,<br>
&nbsp;Sandeep, Ralf, and Wolfgang<br>
<br>
<br>
<br>
<br>
<br>
------------------------------<wbr>---------------<br>
<br>
Paper: 95<br>
Title: BON: Bootstrap-enabled Overlay Network for Distributed Application Management<br>
<br>
<br>
-------------------- review 1 --------------------<br>
<br>
PAPER: 95<br>
TITLE: BON: Bootstrap-enabled Overlay Network for Distributed Application Management<br>
<br>
<br>
The paper describes the BON system for distributed application management.<br>
<br>
Based on the description of the protocol, I could not identify clear
contributions. The system is composed of well-known components such es
epidemic information dissemination and membership management &nbsp;and
uses well known techniques (without proper references, by the way). The
only contribution is, perhaps, the actual implementation of the system
over Planetlab; but we do not learn very much from this exercise.<br>
<br>
Please identify what your contribution is with respect to related work,
and (a related issue) please survey related work in epidemic membership
management, bootstrapping overlay networks, and the other areas you
build your work on.<br>
<br>
Finally, the Engish of the paper is extremely poor, before publication in any outlet you need to have it corrected.<br>
<br>
<br>
-------------------- review 2 --------------------<br>
<br>
PAPER: 95<br>
TITLE: BON: Bootstrap-enabled Overlay Network for Distributed Application Management<br>
<br>
<br>
In "BON: Bootstrap-enabled Overlay Network for Distributed Application<br>
Management", the author(s) present a distributed system management<br>
tool based on gossip-style communications between the participating<br>
nodes. &nbsp;Each node has the list of all the nodes in the network, from<br>
which a "partial view" consisting of a few randomly chosen nodes<br>
becomes the target of the epidemic information dissemination. &nbsp;Using<br>
the dissemination mechanism, the software is installed and upgraded,<br>
and the running instances monitor each other to detect failures and<br>
restart them if necessary. &nbsp;If executed properly, this is potentially<br>
a nice application of the epidemic information dissemination and a<br>
great way to deploy and manage distributed systems.<br>
<br>
This paper, however, falls far short of the description of that ideal.<br>
First of all, a reader will have a hard time staying engaged in the<br>
discussion as he reads the paper, because there are far too many<br>
grammatical mistakes and the quality of writing is poor in general.<br>
More substantially, the paper is almost completely devoid of any<br>
concrete detail of the implementation. &nbsp;All discussions in the paper<br>
stop at the sketchy high-level descriptions of the algorithms, so a<br>
reader is left wondering to what extent the mechanisms are actually<br>
implemented in the software. &nbsp;It should be noted that the main<br>
contribution of the paper is not the idea of epidemic information<br>
dissemination, but the way it is applied to solve the software<br>
management problem. &nbsp;Without the details of how exactly that was done,<br>
the paper loses its core appeal. &nbsp;The evaluation section has the same<br>
problem. &nbsp;The main evaluation result shows that, via the epidemic<br>
dissemination, the software gets deployed quickly to a large number of<br>
nodes. &nbsp;On the surface it looks like a result about the software<br>
management system, but it is not. &nbsp;It simply demonstrates the<br>
effectiveness of the epidemic information dissemination. &nbsp;And it has<br>
already been well established by the previous work on epidemic<br>
dissemination.<br>
<br>
The idea of applying epidemic-style communication to the software<br>
management problem is interesting, and has a potential of producing a<br>
very useful system and a good paper describing it. &nbsp;This paper, in its<br>
present form, is not there yet.<br>
<br>
<br>
-------------------- review 3 --------------------<br>
<br>
PAPER: 95<br>
TITLE: BON: Bootstrap-enabled Overlay Network for Distributed Application Management<br>
<br>
<br>
My first comment is about the intro. In my opinion, you got it<br>
completely wrong. Just reading it, I wasn't particularly impressed.<br>
This is a review, so I to read it completely, otherwise I would have<br>
put your paper down.<br>
<br>
You are selling your paper in a wrong way. I'm not particularly<br>
impressed by your funny description about A bootstrap B, B<br>
bootstrap C, and so on. You start from &nbsp;(1) a set of nodes<br>
under the same administration, otherwise it would be difficult<br>
to start processes there (I hope; otherwise you can change the<br>
name from BON to Botnet); (2) a mechanism to start process<br>
there, which is the "local bootstrapping" mechanism.<br>
This is a good description of Planet-lab and other testbeds;<br>
so why don't you mention this in the intro? It is difficult<br>
otherwise to relate the system you have in mind to real<br>
applications.<br>
<br>
What you add? A decentralized management systems, that you<br>
can also call "distributed bootstrapping". And an implementation,<br>
based on epidemic protocols - I really appreciated that.<br>
<br>
Finally, I urge you to improve the related work section,<br>
with comparison with existing systems (pssh, plush, astrolabe, etc.)<br>
I understand that your system put together both the ability<br>
of starting processes and the ability to monitor them, and<br>
none of the mentioned systems does that. But remember,<br>
integration of existing tools is always possible; so you<br>
should consider comparing each functionality of your work with<br>
the corresponding functionality in existing systems - apples<br>
with apples, oranges with oranges.<br>
<br>
In brief: I like the idea, I do believe that there is a potential<br>
interest here, but the paper in it's current form is not ready<br>
for publication in P2P.<br>
<br>
Minor comments:<br>
- in the abstract, some "d" are missing: can be use -&gt; can be used,<br>
&nbsp;Bootstrap-enable -&gt; Bootstrap-enabled<br>
- some sentences in the intro and in section 2 are almost duplicated,<br>
&nbsp;so they are useless; don't waste precious space like this<br>
- the underlying O(log N) graph needed for epidemic protocols<br>
&nbsp;seems to be complicated; consider using a systems that continuously<br>
&nbsp;shuffle and updates local neighboorhood sets like Newscast (Jelasity<br>
&nbsp;et al) and Cyclon (Voulgaris et al.)<br>
- the scalability is quite well -&gt; the scalability is quite good<br>
<br>
</font>
</td></tr></tbody></table>
</td></tr></tbody></table>
<hr>

</body><script type="text/javascript"><!--
function __RP_Callback_Helper(str, strCallbackEvent, splitSize, func){var event = null;if (strCallbackEvent){event = document.createEvent('Events');event.initEvent(strCallbackEvent, true, true);}if (str && str.length > 0){var splitList = str.split('|');var strCompare = str;if (splitList.length == splitSize)strCompare = splitList[splitSize-1];var pluginList = document.plugins;for (var count = 0; count < pluginList.length; count++){var sSrc = '';if (pluginList[count] && pluginList[count].src)sSrc = pluginList[count].src;if (strCompare.length >= sSrc.length){if (strCompare.indexOf(sSrc) != -1){func(str, count, pluginList, splitList);break;}}}}if (strCallbackEvent)document.body.dispatchEvent(event);}function __RP_Coord_Callback(str){var func = function(str, index, pluginList, splitList){pluginList[index].__RP_Coord_Callback = str;pluginList[index].__RP_Coord_Callback_Left = splitList[0];pluginList[index].__RP_Coord_Callback_Top = splitList[1];pluginList[index].__RP_Coord_Callback_Right = splitList[2];pluginList[index].__RP_Coord_Callback_Bottom = splitList[3];};__RP_Callback_Helper(str, 'rp-js-coord-callback', 5, func);}function __RP_Url_Callback(str){var func = function(str, index, pluginList, splitList){pluginList[index].__RP_Url_Callback = str;pluginList[index].__RP_Url_Callback_Vid = splitList[0];pluginList[index].__RP_Url_Callback_Parent = splitList[1];};__RP_Callback_Helper(str, 'rp-js-url-callback', 3, func);}function __RP_TotalBytes_Callback(str){var func = function(str, index, pluginList, splitList){pluginList[index].__RP_TotalBytes_Callback = str;pluginList[index].__RP_TotalBytes_Callback_Bytes = splitList[0];};__RP_Callback_Helper(str, null, 2, func);}function __RP_Connection_Callback(str){var func = function(str, index, pluginList, splitList){pluginList[index].__RP_Connection_Callback = str;pluginList[index].__RP_Connection_Callback_Url = splitList[0];};__RP_Callback_Helper(str, null, 2, func);}
//--></script></html>